{
  "common": {
    "copyToClipboard": "Copy to clipboard",
    "stakingBal": "Staking balance",
    "delegatedBal": "Delegated balance",
    "balance": "Balance",
    "rolls": "Rolls",
    "bakingSince": "Baking since",
    "baker": "Baker | Bakers",
    "capacityAvailable": "Available capacity",
    "fee": "Fee",
    "block": "Block | Blocks",
    "from": "From",
    "to": "To",
    "amount": "Amount",
    "amountDelegated": "Delegated amount",
    "timestamp": "Timestamp",
    "cycle": "Cycle | Cycles",
    "blockId": "Block id",
    "priority": "Priority",
    "denouncedLvl": "Denounced level",
    "viewAll": "View all",
    "manager": "Manager",
    "delegate": "Delegate",
    "includedInBlock": "Included in block",
    "snapshot": "Snapshot | Snapshots",
    "bakingRights": "Baking rights",
    "contract": "Contract | Contracts",
    "acc": "Account | Accounts",
    "topAcc": "Top accounts",
    "loading": "Loading",
    "protocolAmendments": "Protocol amendments",
    "vote": "Vote",
    "home": "Home",
    "opType": "Operation type",
    "other": "Other",
    "endorser": "Endorser",
    "losses": "Losses",
    "delegator": "Delegator | Delegators",
    "reward": "Reward | Rewards",
    "deposit": "Deposit",
    "share": "Share",
    "baking": "Baking",
    "txVol": "Transactions volume",
    "type": "Type",
    "noData": "No data",
    "assets": "Assets",
    "name": "Name",
    "ordinalNumber": "#",
    "contractName": "Contract name",
    "bonds": "Bonds",
    "cycleStart": "Cycle start",
    "cycleEnd": "Cycle end"
  },
  "opTypes": {
    "tx": "Transaction | Transactions",
    "endorsement": "Endorsement | Endorsements",
    "delegation": "Delegation | Delegations",
    "origination": "Origination | Originations",
    "activation": "Activation | Activations",
    "doubleBaking": "Double-baking",
    "doubleEndorsement": "Double-endorsement | Double-endorsements",
    "holders": "Holders"
  },
  "listTypes": {
    "txsList": "Transactions list",
    "endorsementsList": "Endorsements list",
    "delegationsList": "Delegations list",
    "originationsList": "Originations list",
    "activationsList": "Activations list",
    "bakingList": "Baking list",
    "dblBakingList": "Double-baking list",
    "dblEndorsementsList": "Double-endorsements list",
    "otherOpsList": "Other operations list",
    "blocksList": "Blocks list",
    "snapshotsList": "Snapshots list",
    "futureBakingRightsList": "Future baking rights list",
    "pastBakingRightsList": "Past baking rights list",
    "bakersList": "Bakers list",
    "publicBakersList": "Public bakers list",
    "accsList": "Accounts list",
    "contractsList": "Contracts list",
    "protocolsList": "Protocols list",
    "votersList": "Voters list",
    "nonVotersList": "Non-voters list",
    "rewardsList": "Rewards list",
    "topAccountsList": "Top accounts list",
    "assetsList": "Assets list",
    "holdersList": "Holders list",
    "bondsList": "Bonds list",
    "mempoolList": "Mempool list"
  },
  "pageTypes": {
    "txsPage": "Transactions page",
    "endorsementsPage": "Endorsements page",
    "delegationsPage": "Delegations page",
    "originationsPage": "Originations page",
    "activationsPage": "Activations page",
    "dblBakingPage": "Double-baking page",
    "dblEndorsementsPage": "Double-endorsements page",
    "blocksPage": "Blocks page",
    "snapshotsPage": "Snapshots page",
    "bakersPage": "Bakers page",
    "allBakersPage": "All bakers page",
    "publicBakersPage": "Public bakers page",
    "accsPage": "Accounts page",
    "contractsPage": "Contracts page",
    "protocolsPage": "Protocols page",
    "generalChartsPage": "General charts page",
    "bakingChartsPage": "Baking charts page",
    "topAccountsPage": "Top accounts page",
    "assetsPage": "Assets page",
    "mempoolPage": "Mempool page"
  },
  "infoTypes": {
    "txInfo": "Transaction information",
    "endorsementInfo": "Endorsement information",
    "delegationInfo": "Delegation information",
    "originationInfo": "Origination information",
    "activationInfo": "Activation information",
    "dblBakingInfo": "Double-baking information",
    "dblEndorsementInfo": "Double-endorsement information",
    "blockInfo": "Block information",
    "bakerInfo": "Baker information",
    "accInfo": "Account information",
    "generalInfo": "General information",
    "voteInfo": "Vote information",
    "contractInfo": "Contact information",
    "assetInfo": "Asset information"
  },
  "hashTypes": {
    "hash": "Hash",
    "txHash": "Transaction hash",
    "endorsementHash": "Endorsement hash",
    "delegationHash": "Delegation hash",
    "originationHash": "Origination hash",
    "opHash": "Operation hash",
    "voteHash": "Vote hash"
  },
  "statusTypes": {
    "status": "Status",
    "success": "Success",
    "failed": "Failed",
    "revealed": "Revealed",
    "unrevealed": "Unrevealed"
  },
  "numberOf": {
    "#OfDelegators": "# of delegators",
    "#OfEndorsements": "# of endorsements",
    "#OfOperations": "# of operations",
    "#OfVotes": "# of votes",
    "#OfWhaleAccs": "# of whale accounts"
  },
  "bakerSingle": {
    "address": "Address",
    "blocksBaked": "Blocks baked",
    "balances": "Balances",
    "totalBal": "Total balance",
    "liquidBal": "Liquid balance",
    "currDeposits": "Current deposits",
    "endorsement": "Endorsement",
    "pendingRewards": "Pending rewards",
    "bakingHistory": "Baking history",
    "endorsingHistory": "Endorsing History",
    "missed": "Missed",
    "stolen": "Stolen",
    "avgPriority": "Average priority",
    "bakingDeposit": "Baking deposit",
    "endorsingDeposit": "Endorsing deposit",
    "expectedTotalDeposit": "Expected total deposit",
    "actualTotalDeposit": "Actual total deposit",
    "availableBond": "Available bond"
  },
  "blockSingle": {
    "bakerFee": "Baker's fee",
    "bakerPriority": "Baker's priority",
    "dblBakingEvidence": "Double-baking evidence",
    "dblEndorsementEvidence": "Double-endorsement evidence",
    "blockTime": "Block time",
    "blockFitness": "Block fitness",
    "gasUsed": "Gas used",
    "protocolVersion": "Protocol version",
    "cyclePosition": "Cycle position",
    "outOf": "out of",
    "originatedAccs": "Originated accounts"
  },
  "txSingle": {
    "secret": "Secret",
    "slotsEndorsed": "Slot(s) endorsed",
    "confirmations": "Confirmations",
    "deposit": "Deposit",
    "reward": "Reward",
    "amountClaimed": "Claimed amount"
  },
  "accSingle": {
    "created": "Created",
    "lastActive": "Last active"
  },
  "blocksList": {
    "volume": "Volume"
  },
  "endorsementsList": {
    "endorsedBlock": "Endorsed block",
    "slots": "Slots"
  },
  "dblBakingList": {
    "accuser": "Accuser",
    "bakerRewards": "Baker rewards",
    "accuserRewards": "Accuser rewards",
    "offender": "Offender",
    "lostDeposits": "Lost deposits",
    "lostRewards": "Lost rewards"
  },
  "protocolsList": {
    "protocol": "Protocol | Protocols",
    "startingBlock": "Starting block",
    "endingBlock": "Ending block"
  },
  "delegationsList": {
    "delegationAmount": "Delegation amount"
  },
  "revealsList": {
    "reveal": "Reveal",
    "publicKey": "Public key"
  },
  "mempoolList": {
    "signature": "Signature",
    "branch": "Branch",
    "protocol": "Protocol",
    "details": "Details",
    "showDetails": "Show details",
    "hideDetails": "Hide details"
  },
  "endorsementsSlots": {
    "blockEndorsements": "Block endorsements"
  },
  "counters": {
    "cycleCounter": "Cycle counter",
    "untilEnd": "Until cycle end",
    "d": "D",
    "h": "H",
    "m": "M",
    "icoPercent": "Percentage of ICO addresses activated"
  },
  "header": {
    "allBakers": "All bakers",
    "publicBakers": "Public bakers",
    "dateFormat": "Date format",
    "operations": "Operations",
    "governance": "Governance",
    "charts": "Charts",
    "general": "General",
    "resources": "Resources",
    "mempool": "Mempool"
  },
  "nets": {
    "mainnet": "Mainnet",
    "babylonnet": "Babylonnet",
    "carthagenet": "Carthagenet"
  },
  "footer": {
    "allRights": "All rights reserved",
    "contactUs": "Contact us",
    "backendRepo": "Backend repo",
    "frontendRepo": "Frontend repo"
  },
  "dateSwitcher": {
    "usFormat": "US",
    "standardFormat": "Standard"
  },
  "aggregateBy": {
    "year": "This year",
    "month": "This month"
  },
  "perPageSelect": {
    "itemsPerPage": "Items per page"
  },
  "search": {
    "placeholder": "Block, tx or address"
  },
  "voting": {
    "emptyProposal": "There are no proposals in this period.",
    "proposal": "Proposal | Proposals",
    "votes": {
      "yay": "Yay",
      "nay": "Nay",
      "pass": "Pass"
    },
    "proposer": "Proposer",
    "proposalFile": "Proposal file",
    "superMajority": "Super-majority",
    "quorum": "Quorum",
    "percentOfVotes": "Percent of votes",
    "bakersVotes": "Bakers' votes",
    "votesCast": "Votes cast",
    "periodStarts": "Period starts",
    "periodEnds": "Period ends",
    "periodNotFound": "Period {id} was not found.",
    "generalVotingStats": "General voting stats",
    "recentVotes": "Recent votes",
    "voter": "Voter | Voters",
    "participation": "Participation",
    "undecided": "Undecided",
    "votesAvailable": "Votes available",
    "nonVoters": "Non-voters",
    "upVotes": "Upvotes",
    "proposalDescription": "Proposal description",
    "periodTypes": {
      "proposal": "Proposal",
      "exploration": "Exploration",
      "testing": "Testing",
      "promotion": "Promotion"
    },
    "showAll": "Show all",
    "showLess": "Show less"
  },
  "protocolPeriods": {
    "current": "Current",
    "past": "Past"
  },
  "errPages": {
    "page": "Page",
    "pageNotFound": "Page is not found",
    "smthWrong": "Something went wrong"
  },
  "accPage": {
    "balInThirtyDays": "Balance in the last 30 days"
  },
  "txPage": {
    "gasLimit": "Gas limit",
    "storageLimit": "Storage limit",
    "txDetails": "Transaction details",
    "delegationDetails": "Delegation details",
    "originationDetails": "Origination details",
    "originator": "Originator",
    "originatedAcc": "Originated account"
  },
  "votePage": {
    "kind": "Kind",
    "source": "Source"
  },
  "index": {
    "stakingRatio": "Staking ratio",
    "untilVotingEnd": "Until voting period end",
    "blockHeight": "Block height",
    "latestBaker": "Latest baker",
    "price": "Price",
    "tradingVol": "Trading volume",
    "marketCap": "Market cap",
    "circulatingSupply": "Circulating supply",
    "moreAboutTezos": "More about Tezos",
    "whatIsTezos": "What is Tezos?",
    "whitePaper": "White paper",
    "testnetFaucet": "Testnet faucet",
    "howToRunTezos": "How to run Tezos?",
    "gitRepo": "Git repository",
    "dockerImages": "Docker images"
  },
  "charts": {
    "numOfBlocks": "Number of blocks",
    "avgBlockDelay": "Average block delay",
    "feesPerDay": "Fees per day",
    "delegationVol": "Delegation volume",
    "bakersPerDay": "Bakers per day",
    "rollsDist": "Rolls distribution",
    "prioritiesPerCycle": "Priorities per cycle",
    "andHigher": "and higher",
    "accsWith500k": "Accounts with more than 500,000 XTZ"
  },
  "maintenance": {
    "title": "Maintenance",
    "p1": "Sorry, we're currently down for maintenance.",
    "p2": "We'll be back up shortly. Please, return to us a bit later."
  },
  "glossary": {
    "title": "Glossary",
    "items": {
      "account": {
        "term": "Account",
        "definition": "an account is a unique identifier within protocol. Accounts can be originated or implicit. Each account is associated with a balance (an amount of tez available)."
      },
      "accuser": {
        "term": "Accuser",
        "definition": "if two endorsements are made for the same slot or two blocks at the same height by a delegate, the evidence can be collected by an accuser and included in a block for a period of PRESERVED_CYCLES, including the current cycle."
      },
      "baker": {
        "term": "Baker",
        "definition": "Tezos term for a validator or block producer."
      },
      "context": {
        "term": "Context",
        "definition": "the state of the blockchain. The context is defined by the Economic Protocol and typically includes information such as “this account is credited with this many tez” and “this is the code for that smart contract.” The Context is modified by Operations."
      },
      "cycle": {
        "term": "Cycle",
        "definition": "cycles are used as a unit of ‘time’ in Tezos. A cycle is a set of consecutive 4096 blocks. E.g., cycle 12 started at block height 49152 and ended at block height 53248."
      },
      "delegate": {
        "term": "Delegate",
        "definition": "another term for a public baker. Delegate receives delegations from users and pays out a share of rewards to them."
      },
      "delegator": {
        "term": "Delegator",
        "definition": "a user who delegates the rights to their tokens to a delegate/baker and in return receives a portion of the reward."
      },
      "delegation": {
        "term": "Delegation",
        "definition": "a process of providing the rights to one’s tokens to the public baker. Note that this is different from a transaction and the funds never leave one’s wallet when delegating."
      },
      "doubleBakingEndorsement": {
        "term": "Double baking/endorsement",
        "definition": "a process of producing/endorsing(validating) a block of the same block level twice. This is considered a malicious behaviour and is punishable by slashing the baker deposits."
      },
      "endorsement": {
        "term": "Endorsement",
        "definition": "the process of validating the produced block. Each block contains 32 endorsement slots, some bakers can have more than one endorsement within the same block."
      },
      "fitness": {
        "term": "Fitness (other names Score, Weight)",
        "definition": "the fitness is a metric used to compare contexts. For example, when several blocks claim to be heads of the chain, their context’s fitness are compared. The block with the highest fitness is selected as the head of the chain."
      },
      "gas": {
        "term": "Gas",
        "definition": "a measure of the number of elementary operations performed during the execution of a smart contract. Gas is used to measure how much computing power is used to execute a smart contract."
      },
      "hash": {
        "term": "Hash",
        "definition": "a hash is a function that converts one value to another and is used as a unique identifier."
      },
      "head": {
        "term": "Head",
        "definition": "current block level of the main chain."
      },
      "implicitAcc": {
        "term": "Implicit account",
        "definition": "an account that is linked to a public key. Unlike a smart contract, an Implicit account cannot include a script and it cannot reject incoming transactions."
      },
      "level": {
        "term": "Level (block level)",
        "definition": "aka block height, is the total amount of blocks included into the chain."
      },
      "michelson": {
        "term": "Michelson",
        "definition": "Tezos built-in language used by a smart contract."
      },
      "node": {
        "term": "Node",
        "definition": "a peer in the P2P network. It maintains a local state and propagates blocks and operations."
      },
      "nonceRevelation": {
        "term": "Nonce revelation",
        "definition": "is an operation performed by a baker to reveal the committed hashed number added to a block in a blockchain. This is done as a security and a spam prevention measure."
      },
      "priority": {
        "term": "Priority",
        "definition": "a rank of different baking rights. Each rank corresponds to a time span. A baker with baking rights at a given priority is only allowed to bake during the priority’s corresponding time span. Baking outside of one’s designated priority, results in an invalid block."
      },
      "operation": {
        "term": "Operation",
        "definition": "transactions, accusations, activations, delegations, endorsements and originations."
      },
      "origination": {
        "term": "Origination",
        "definition": "an operation to create a smart contract."
      },
      "randomSeed": {
        "term": "Random seed",
        "definition": "a number computed from information already found on the blockchain and used to determine baking and endorsement rights."
      },
      "roll": {
        "term": "Roll",
        "definition": "an amount of tez (e.g., 8000ꜩ) serving as a unit to determine delegates’ baking rights in a cycle. A delegate with twice as many rolls as another will be given twice as many rights to bake."
      },
      "shell": {
        "term": "Shell",
        "definition": "a part of the blockchain protocol which acts as an interface between a gossip network and the protocol. The network shell works by maintaining the best chain known to the client."
      },
      "snapshot": {
        "term": "Snapshot",
        "definition": "a representation of the state of the network at a particular point in time with all the necessary data. Snapshots allow bootstrapping a node within a few minutes. Snapshots are also used for assigning baking and endorsement rights to the bakers."
      },
      "smartContract": {
        "term": "Smart contract",
        "definition": "an account which is associated with a Michelson script. They are created with an explicit origination operation and are therefore sometimes called originated accounts. The address of a smart contract always starts with the letters KT1."
      },
      "tez": {
        "term": "Tez",
        "definition": "aka XTZ aka ꜩ are the native Tezos tokens."
      },
      "transaction": {
        "term": "Transaction",
        "definition": "a transfer between two accounts or an operation to run the code of a smart contract."
      }
    }
  },
  "currencySwitcher": {
    "title": "Currency"
  },
  "feedback": {
    "title": "Feedback",
    "overallOpinion": "What is your overall opinion of TezTracker (1-☹️, 10-😀)",
    "selectFeedbackType": "Select the type of feedback you’d like to leave",
    "selectFeedbackScope": "Select the scope of feedback and short summary",
    "scopeDesc": "If general, concerns the whole website. If specific, please specify in the feedback section the page or element you are referring to.",
    "summary": "Summary",
    "summaryDesc": "Summary field provides up to 100 characters gist of the feedback.",
    "leaveFeedback": "Please leave your feedback here",
    "selectOpt": "Please select an option",
    "types": {
      "suggestion":  "Suggestion",
      "issue": "Issue",
      "question":  "Question",
      "compliment": "Compliment"
    },
    "scopes": {
      "general": "General",
      "specific": "Specific"
    },
    "submit": "Submit",
    "submitted": "Submitted"
  },
  "btnCopy": {
    "copied": "Copied",
    "failed": "Failed to copy"
  },
  "validationErrs": {
    "required": "The field is required",
    "maxLength": "The field must be at most {num} characters",
    "latin": "Only English characters are allowed",
    "noRule": "No validation error"
  },
  "errorsNotifications": {
    "success": "Success",
    "error": "Error",
    "404": "Not found",
    "400": "Bad request",
    "500": "Internal error",
    "ERR_SERVICE": "Service error"
  }
}
